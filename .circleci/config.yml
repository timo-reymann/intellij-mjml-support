version: '2.1'

orbs:
  github-release: timo-reymann/github-release@1.0.1

executors:
  gradle:
    working_directory: ~/project
    docker:
      - image: cimg/openjdk:11.0
  go:
    working_directory: ~/project
    docker:
      - image: circleci/golang:1.15

commands:
  check-changed-files-or-halt:
    parameters:
      pattern:
        type: string
    steps:
      - run: git show -m HEAD --name-only --pretty="" | egrep -q '<< parameters.pattern >>' || circleci step halt
  retrieve_cache:
    steps:
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}
  create_or_update_cache:
    steps:
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}

jobs:
  test:
    executor: gradle
    steps:
      - checkout
      - retrieve_cache
      - run:
          name: Run tests
          command: ./gradlew test
      - run:
          name: Run pluginVerifier
          command: ./gradlew runPluginVerifier
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/test-results/test
          when: always
      - create_or_update_cache

  build:
    executor: gradle
    steps:
      - checkout
      - retrieve_cache
      - run:
          name: Build plugin
          command: ./gradlew buildPlugin
      - store_artifacts:
          path: build/distributions
      - persist_to_workspace:
          name: Persist plugin file
          root: .
          paths:
            - build/distributions
      - create_or_update_cache

  build_and_publish_snapshot:
    executor: gradle
    steps:
      - checkout
      - check-changed-files-or-halt:
          pattern: ^src
      - retrieve_cache
      - run:
          name: Setup build version
          command: echo "export SNAPSHOT_VERSION=`date +'%Y.%m.%d'`-${CIRCLE_BUILD_NUM}" >> $BASH_ENV
      - run:
          name: Build snapshot
          command: ./gradlew -PsnapshotVersion="$SNAPSHOT_VERSION" buildPlugin publishPlugin
      - run:
          name: Notify github issue about new snapshot
          command: |
            export COMMIT_MESSAGE="$(git log --format=oneline --pretty=format:%s  -n 1 $CIRCLE_SHA)"
            sudo apt update
            sudo apt install python3 python3-pip
            pip3 install PyGitHub==1.55
            ./.circleci/notify_github.py


  publish_to_marketplace:
    executor: gradle
    steps:
      - checkout
      - retrieve_cache
      - attach_workspace:
          at: .
          name: Retrieve plugin file
      - run:
          name: Publish plugin
          command: ./gradlew publishPlugin

  github_release:
    executor: go
    steps:
      - checkout
      - attach_workspace:
          at: .
          name: Retrieve plugin file
      - github-release/setup
      - github-release/create-release
      - github-release/upload-files:
          file_pattern: 'build/distributions/*'

workflows:
  continious:
    jobs:
      - test:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - build_and_publish_snapshot:
          requires:
            - test
          filters:
            branches:
              only: main
      - build:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - github_release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - publish_to_marketplace:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
