version: '2.1'

orbs:
  github-cli: circleci/github-cli@2.7.0
  node: circleci/node@7.1.0
  rust: circleci/rust@1.7.0

executors:
  gradle:
    working_directory: ~/workspace
    docker:
      - image: cimg/openjdk:17.0.14
  node:
    docker:
      - image: cimg/node:lts
  rust:
    docker:
      - image: cimg/rust:1.87.0

commands:
  check-changed-files-or-halt:
    parameters:
      pattern:
        type: string
    steps:
      - run: git show -m HEAD --name-only --pretty="" | egrep -q '<< parameters.pattern >>' || circleci step halt
  retrieve_cache:
    steps:
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}
      - restore_cache:
          key: v1-plugin-verifier-cache-{{ checksum "build.gradle.kts" }}
  create_or_update_cache:
    steps:
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle.kts" }}
      - save_cache:
          paths:
            - ~/.pluginVerifier
          key: v1-plugin-verifier-cache-{{ checksum "build.gradle.kts" }}

jobs:
  test-node-renderer:
    executor: node
    steps:
      - checkout
      - node/install-packages:
          app-dir: src/node-mjml-renderer
      - run:
          name: Run tests
          command: cd src/node-mjml-renderer && npm run test

  test-plugin:
    resource_class: large
    executor: gradle
    steps:
      - checkout
      - retrieve_cache
      - run:
          name: Run tests
          command: ./gradlew test
      - run:
          name: Run pluginVerifier
          command: ./gradlew verifyPlugin
          no_output_timeout: 20m
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/test-results/test
      - create_or_update_cache

  test-wasi-renderer:
    executor: rust
    steps:
      - checkout
      - rust/test:
          working_directory: ~/project/src/wasm-mrml-renderer

  build:
    executor: gradle
    steps:
      - checkout
      - retrieve_cache
      - run:
          name: Build plugin
          command: ./gradlew buildPlugin
      - create_or_update_cache

  build_and_publish_snapshot:
    resource_class: large
    executor: gradle
    steps:
      - checkout
      - check-changed-files-or-halt:
          pattern: ^src
      - retrieve_cache
      - run:
          name: Setup build version
          command: echo "export SNAPSHOT_VERSION=`date +'%Y.%m.%d'`-${CIRCLE_BUILD_NUM}" >> $BASH_ENV
      - run:
          name: Build snapshot
          command: ./gradlew -PsnapshotVersion="$SNAPSHOT_VERSION" buildPlugin publishPlugin
      - run:
          name: Notify github issue about new snapshot
          command: |
            export COMMIT_MESSAGE="$(git log --format=oneline --pretty=format:%s  -n 1 $CIRCLE_SHA)"
            sudo apt update
            sudo apt install python3 python3-pip
            pip3 install PyGitHub==1.55
            ./.circleci/notify_github.py


  publish_to_marketplace:
    executor: gradle
    steps:
      - checkout
      - retrieve_cache
      - attach_workspace:
          at: .
          name: Retrieve plugin file
      - run:
          name: Publish plugin
          command: ./gradlew publishPlugin

  create_github_release:
    executor: gradle
    steps:
      - checkout
      - attach_workspace:
          at: .
          name: Retrieve plugin file
      - github-cli/install:
          version: "2.21.2"
      - run:
          name: Publish release
          command: |
            gh release create ${CIRCLE_TAG} --generate-notes

workflows:
  continious:
    jobs:
      - test-plugin:
          requires:
            - build
          filters:
            branches:
              only: /.*/
      - test-node-renderer:
          filters:
            branches:
              only: /.*/
      - test-wasi-renderer:
          filters:
            branches:
              only: /.*/
      - build_and_publish_snapshot:
          requires:
            - test-plugin
            - test-node-renderer
            - test-wasi-renderer
          filters:
            branches:
              only: /.*/
      - build:
          filters:
            tags:
              only: /.*/
      - create_github_release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - publish_to_marketplace:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
